import telebot
from telebot import types
import random
import threading
import time
from translate import Translator

TOKEN = '8171454576:AAGAAmFAEQJW0pdVmSmC4mC-CEVeTLBnRI4'
bot = telebot.TeleBot(TOKEN)

user_game_state = {}  # –î–ª—è –∏–≥—Ä—ã "–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ"
user_waiting_for_translation = set()  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤–≤–æ–¥—è—Ç —Å–ª–æ–≤–æ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞

@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("–ü—Ä–∏–≤–µ—Ç", "–ö–∞–∫ –¥–µ–ª–∞?", "–ü–æ–∫–∞", "üé≤ –£–≥–∞–¥–∞–π —á–∏—Å–ª–æ", "‚è∞ –ù–∞–ø–æ–º–Ω–∏ –º–Ω–µ", "üåê –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫")
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ üëá", reply_markup=markup)

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    user_id = message.from_user.id
    text = message.text

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Å–ª–æ–≤–æ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞
    if user_id in user_waiting_for_translation:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —è–∑—ã–∫ (–ø—Ä–æ—Å—Ç–æ–π –º–µ—Ç–æ–¥: –µ—Å–ª–∏ –µ—Å—Ç—å –∫–∏—Ä–∏–ª–ª–∏—Ü–∞ ‚Äî –ø–µ—Ä–µ–≤–æ–¥–∏–º –≤ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π)
        if any('\u0400' <= c <= '\u04FF' for c in text):
            translator = Translator(from_lang="ru", to_lang="en")
        else:
            translator = Translator(from_lang="en", to_lang="ru")

        try:
            translation = translator.translate(text)
            bot.send_message(message.chat.id, f"–ü–µ—Ä–µ–≤–æ–¥: {translation}")
        except Exception as e:
            bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–µ.")
        user_waiting_for_translation.remove(user_id)
        return

    # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    if text == "–ü—Ä–∏–≤–µ—Ç":
        bot.send_message(message.chat.id, "–ò —Ç–µ–±–µ –ø—Ä–∏–≤–µ—Ç! üëã")
    elif text == "–ö–∞–∫ –¥–µ–ª–∞?":
        bot.send_message(message.chat.id, "–£ –º–µ–Ω—è –≤—Å—ë –æ—Ç–ª–∏—á–Ω–æ, –∞ —É —Ç–µ–±—è?")
    elif text == "–ü–æ–∫–∞":
        bot.send_message(message.chat.id, "–ü–æ–∫–∞-–ø–æ–∫–∞! üëã")
    elif text == "üé≤ –£–≥–∞–¥–∞–π —á–∏—Å–ª–æ":
        secret_number = random.randint(1, 5)
        user_game_state[user_id] = secret_number
        bot.send_message(message.chat.id, "–Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 5. –ü–æ–ø—Ä–æ–±—É–π —É–≥–∞–¥–∞—Ç—å!")
    elif user_id in user_game_state:
        try:
            guess = int(text)
            secret = user_game_state[user_id]
            if guess == secret:
                bot.send_message(message.chat.id, f"üéâ –£–≥–∞–¥–∞–ª! –≠—Ç–æ –±—ã–ª–æ {secret}")
            else:
                bot.send_message(message.chat.id, f"‚ùå –ù–µ —É–≥–∞–¥–∞–ª. –Ø –∑–∞–≥–∞–¥–∞–ª {secret}")
            del user_game_state[user_id]
        except ValueError:
            bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 5.")
    elif text == "‚è∞ –ù–∞–ø–æ–º–Ω–∏ –º–Ω–µ":
        bot.send_message(message.chat.id, "–û–∫–µ–π! –ù–∞–ø–æ–º–Ω—é —Ç–µ–±–µ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥ üòâ")
        threading.Thread(target=reminder_timer, args=(message.chat.id,)).start()
    elif text == "üåê –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫":
        bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–ª–æ–≤–æ –∏–ª–∏ —Ñ—Ä–∞–∑—É –Ω–∞ —Ä—É—Å—Å–∫–æ–º –∏–ª–∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º, —è –ø–µ—Ä–µ–≤–µ–¥—É!")
        user_waiting_for_translation.add(user_id)
    else:
        bot.send_message(message.chat.id, "–ù–µ –ø–æ–Ω—è–ª... –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞!")

def reminder_timer(chat_id):
    time.sleep(10)
    bot.send_message(chat_id, "‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞—é: –ø–æ—Ä–∞ —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä–µ—Ä—ã–≤ –∏–ª–∏ –ø–æ–ø–∏—Ç—å –≤–æ–¥—ã!")

bot.polling()





